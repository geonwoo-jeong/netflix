{"version":3,"sources":["assets/noPosterSmall.png","serviceWorker.ts","Components/Section.tsx","Components/Loader.tsx","Components/Message.tsx","Components/Poster.tsx","Routes/Home/HomePresenter.tsx","api.ts","Routes/Home/index.ts","Routes/Home/HomeContainer.tsx","Routes/TV/TVPresenter.tsx","Routes/TV/index.ts","Routes/TV/TVContainer.tsx","Routes/Search/SearchPresenter.tsx","Routes/Search/index.ts","Routes/Search/SearchContainer.tsx","Components/Header.tsx","Routes/Detail/DetailPresenter.tsx","Routes/Detail/index.ts","Routes/Detail/DetailContainer.tsx","Components/Router.tsx","Components/GlobalStyles.ts","Components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","error","loading","Fragment","Helmet_default","Components_Loader","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","process","params","api_key","language","navigator","movieApi","get","topRated","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","react","Home_HomePresenter","React","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","name","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","showResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h1","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_runtime","episode_run_time","genres","genre","index","overview","DetailContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Component","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","config","ReactDOM","Components_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ed8ac07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { ReactNode } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section: React.SFC<IProps> = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader: React.SFC = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n  color: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message: React.SFC<IProps> = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.prototype = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  id: number;\r\n  imageUrl: any;\r\n  rating: number;\r\n  year: any;\r\n  title: string;\r\n  isMovie?: boolean;\r\n}\r\n\r\ninterface ImageProps {\r\n  bgUrl: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props: ImageProps) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster: React.SFC<IProps> = ({\r\n  id,\r\n  imageUrl,\r\n  title,\r\n  rating,\r\n  year,\r\n  isMovie = false\r\n}) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\ninterface IProps {\r\n  nowPlaying: any;\r\n  upcoming: any;\r\n  popular: any;\r\n  error: any;\r\n  loading: boolean;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter: React.SFC<IProps> = ({\r\n  nowPlaying,\r\n  upcoming,\r\n  popular,\r\n  error,\r\n  loading\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Netflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie: any) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title || movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Playing\">\r\n            {upcoming.map((movie: any) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                rating={movie.vote_average}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title || movie.original_title}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Playing\">\r\n            {popular.map((movie: any) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                rating={movie.vote_average}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title || movie.original_title}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_MOVIE_URL,\r\n  params: {\r\n    api_key: process.env.REACT_APP_MOVIE_API_KEY,\r\n    language: navigator.language || \"ja-JP\"\r\n  }\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id: number) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term: string) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id: number) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term: string) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import * as React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await movieApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Cant' find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\ninterface IProps {\r\n  topRated: any;\r\n  popular: any;\r\n  airingToday: any;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter: React.SFC<IProps> = ({\r\n  topRated,\r\n  popular,\r\n  airingToday,\r\n  loading,\r\n  error\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Netflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show: any) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name || show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show: any) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name || show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show: any) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import * as React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV Information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\ninterface IProps {\r\n  movieResults: any;\r\n  showResults: any;\r\n  searchTerm: string;\r\n  loading: boolean;\r\n  error: any;\r\n  handleSubmit: any;\r\n  updateTerm: any;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter: React.SFC<IProps> = ({\r\n  movieResults,\r\n  showResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Search | Netflix</title>\r\n    </Helmet>\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie: any) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title || movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {showResults && showResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {showResults.map((show: any) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.name || show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n          {showResults &&\r\n            movieResults &&\r\n            showResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n              <Message text=\"Nothing found.\" color=\"#95a5a6\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  showResults: PropTypes.array,\r\n  searchTerm: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import * as React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    showResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: showResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, showResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movieResults,\r\n      showResults,\r\n      searchTerm,\r\n      loading,\r\n      error\r\n    } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        showResults={showResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {}\r\n\r\ninterface ItemProps {\r\n  current: boolean;\r\n}\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props: ItemProps) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderContainer: React.SFC<IProps> = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\n\r\ninterface IProps {\r\n  result: any;\r\n  error: any;\r\n  loading: boolean;\r\n}\r\n\r\ninterface IBgImageProps {\r\n  bgImage: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props: IBgImageProps) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: center;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props: IBgImageProps) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n  &:before {\r\n    content: \"•\";\r\n  }\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter: React.SFC<IProps> = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading... | Netflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message color=\"#e74c3c\" text={error} />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.title ||\r\n            result.name ||\r\n            result.original_title ||\r\n            result.original_name}{\" \"}\r\n          | Netflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `http://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.title ||\r\n              result.name ||\r\n              result.original_title ||\r\n              result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider />\r\n            <Item>\r\n              {result.runtime\r\n                ? result.runtime\r\n                : result.episode_runtime\r\n                ? result.episode_run_time[0]\r\n                : \"0\"}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider />\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre: any, index: number) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Overview>{result.overview}</Overview>\r\n          </ItemContainer>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {}\r\ninterface IState {\r\n  isMovie: boolean;\r\n  result: any;\r\n  error: any;\r\n  loading: boolean;\r\n}\r\nclass DetailContainer extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","import * as React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect path=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 12px;\r\n    background-color: rgba(20,20,20,1);\r\n    color: white;\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import * as React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable-next-line\nrequire(\"dotenv\").config();\n\nimport * as serviceWorker from \"serviceWorker\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}